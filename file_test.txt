

cat < file2 > file3 < file4



echo "world"'world' > file > "fi  le" > fi$USER > "fi$USER".txt
il faut conserver le token brut dabord (avec guillemet)
traiter les guillemet
expandre les variable (et lexpansion des variable doit etre faite avant lexecution de la commande)



un token cest ca :
- diowffguk"SAfdsfn'$USERkh"fhklbbfdh'
	celui ci est compose de :
		- diowffguk (type no quote)
		- SAfdsfn$USERkh (double quote donc a expandre)
		- fhklb (no quote)
		- bfdh (simple quote rien faire)



touch "a""b" : doit crée le fichier nommé : ab et non "a""b"
> foo > foo ca''t << foo : doit executé le here doc jusqu a ecrire foo fera CAT du here doc 
dans le dernier redirect_out qui est > foo



bash-3.2$ (export TEST=oui && echo "paranthese : $TEST") && echo "en dehors : $TEST"
paranthese : oui
en dehors : 
verifier la synthaxe des paranthese



export TEST=oui && echo $TEST
bien expandre les variable pendant lexecution



les redirection d entrée , faut toujours tout effectuer mais ne prendre que la derniere ,
comme pour les redirections de sortie c est le dernier qui doit etre pris seulement



cat < file > file 1 < file2 si file2 inexistant... il va retourné l erreur comme quoi file2 n existe pas,
mais il va quand meme crée file1 car il est avant, il ne l aurai pa fais si c etait apres comme par ex : 
cat < inexistant > nouveau , nouveau ne va pas se crée 
cat > nouveau < inexsitant , nouveau se creer mais inexistant est pa trouve donc erreur



la commande peut commencer par > et >> ,ca crée bien un fichier 

